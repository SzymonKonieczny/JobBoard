@page
@inject UserManager<JobBoardAccount> userManager

@using System.Security.Claims
@using JobBoard.Models
@using System.IO

@model IndexModel
@{
    ViewData["Title"] = "Profile";
    ViewData["ActivePage"] = ManageNavPages.Index;
}

<h3>@ViewData["Title"]</h3>
@* <partial name="_StatusMessage" for="StatusMessage" /> *@
<div class="row">
    <div class="col-md-6">
        <form id="profile-form" method="post" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger" role="alert"></div>
            <div class="form-floating mb-3" 
            @{
                var id = User.FindFirst(ClaimTypes.NameIdentifier).Value;
                var user = await userManager.FindByIdAsync(id);
                var Name = ((JobBoardAccount)user).UserName ?? "UsernameNotFound";
            }>
                <input asp-for="Username" class="form-control" value="@Name" />
                <label asp-for="Username" class="form-label"></label>
            </div>
            <hr>

            <label for="ProfilePicInput"> Profile Picture 
                @if (user.ProfilePicturePath != null && user.ProfilePicturePath !="")
                {
                <a>(@System.IO.Path.GetFileName(user.ProfilePicturePath))</a>
                }

            </label>
            <input type="file" name="ProfilePic" id="ProfilePicInput" accept=".jpg,.png" />

            <hr>

            @if (((JobBoardAccount)user).Type == AccountType.Employee)
            {

                <label for="ResumeInput">Profile Resume
                    @if (user.ResumePath != null && user.ResumePath != "")
                    {
                        <a>(@System.IO.Path.GetFileName(user.ResumePath))</a>
                    }
                </label>
                <input type="file" name="Resume" id="ResumeInput" accept=".pdf,.docx,.jpg,.png" />
                
            }
            <hr>
            <div class="form-floating mb-3"
            @{
                var Desc = ((JobBoardAccount)user).Description ?? "NotFound";
            }>
                @Html.TextAreaFor(o => o.Description,new{placeholder="Description for the account",
                        rows = 15,
                        cols = 100
                    })
            </div>
@*             <div class="form-floating mb-3">
                <input asp-for="Input.PhoneNumber" class="form-control" placeholder="Please enter your phone number."/>
                <label asp-for="Input.PhoneNumber" class="form-label"></label>
                <span asp-validation-for="Input.PhoneNumber" class="text-danger"></span>
            </div> *@


            <button id="update-profile-button" type="submit" class="w-100 btn btn-lg btn-primary">Save</button>
        </form>
        <br />
        <form method="post" asp-page-handler="DeleteAccount">
        
            
            <div class="form-floating mb-3">

                <button id="delete-profile-button" type="submit" class="w-100 btn btn-lg btn-primary">Delete Account</button>

            </div>
        </form>

             


    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
